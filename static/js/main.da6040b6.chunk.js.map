{"version":3,"sources":["Timer.js","Tasks.js","App.js","index.js"],"names":["Timer","props","msToTime","s","secs","mins","handle","clearInterval","timer","setState","isOn","defaultTime","state","time","Swal","fire","title","text","imageUrl","imageWidth","imageHeight","imageAlt","showCancelButton","cancelButtonText","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","breakTimer","handle2","startTimer","afterBreak","start","Date","now","onBreak","url","setInterval","stopTimer","restartTimer","className","Helmet","this","style","fontSize","color","onClick","display","Component","Tasks","changeHandler","event","textField","target","value","deleteTask","preventDefault","console","log","document","getElementById","getAttribute","addTask","joined","tasks","concat","width","margin","paddingTop","textAlign","marginLeft","marginTop","icon","faTrashAlt","type","onChange","App","height","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.da6040b6.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Swal from 'sweetalert2'\nimport Helmet from 'react-helmet'\n\nexport default class Timer extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            time: 1*1000*60,\n            start: 0,\n            isOn: false,\n            onBreak: false,\n            url: \"https://webgradients.com/public/webgradients_png/022%20Morpheus%20Den.png\",\n            defaultTime: 1*1000*60\n        }        \n    }\n      \n    msToTime = (s) => {\n        var ms = s % 1000;\n        s = (s - ms) / 1000;\n        var secs = s % 60;\n        s = (s - secs) / 60;\n        var mins = s % 60;\n        var hrs = (s - mins) / 60;\n      \n        if (secs<10) {\n            secs = \"0\" + secs\n        }\n        \n        return mins + ':' + secs\n      }\n\n    handle = () => {\n        clearInterval(this.timer);\n        this.setState({isOn: false, defaultTime: this.state.time})\n        \n        Swal.fire({\n            title: 'Do you want to take a 5-min break now?',\n            text: \"Or you can continue working!\",\n            imageUrl: \"https://media.tenor.com/images/dc3a69fd45e89213eb1cd6a740213336/tenor.gif\",\n            imageWidth: \"30vh\",\n            imageHeight: \"20vh\",\n            imageAlt: 'Good work, Keep it up!',\n            showCancelButton: true,\n            cancelButtonText: \"No, I want to keep working!\",\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, I need a break!'\n          }).then((result) => {\n            if (result.isConfirmed) {\n              Swal.fire(\n                'Enjoy your break!',\n                'Maybe grab a snack or browse through Instagram :)',\n                'success'\n              ).then (() => {\n                    this.breakTimer();\n              }) \n\n\n\n            }\n          })\n    }\n\n    handle2 = () => {\n        clearInterval(this.timer);\n        this.setState({isOn: false, defaultTime: this.state.time})\n        \n        Swal.fire({\n            title: 'Break is over! Are you ready to start working again?',\n            text: \"\",\n            imageUrl: \"https://i.pinimg.com/originals/4c/0e/a0/4c0ea0163a7bcdf118889bdf738c010d.gif\",\n            imageWidth: \"30vh\",\n            imageHeight: \"20vh\",\n            imageAlt: 'Good work, Keep it up!',\n            showCancelButton: true,\n            cancelButtonText: \"No, 5 more minutes!\",\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, back to work!'\n          }).then((result) => {\n            if (result.isConfirmed) {\n              Swal.fire(\n                \"You got this! Keep grinding!\",\n                \"Don't be Busy, be Productive.\",\n                'success'\n              ).then (() => {\n                    this.setState({time: 1*60*1000, defaultTime: 1*60*1000});\n                    this.startTimer();                   \n              }) \n            } else {\n                this.breakTimer();   \n            }\n\n          })\n    }\n\n    breakTimer = () => {\n        this.setState({time: 0.5*60*1000, defaultTime: 0.5*60*1000});\n        this.afterBreak();\n    }\n\n    afterBreak = () => { \n        this.setState({\n            time: this.state.defaultTime,\n            start: Date.now(),\n             isOn: true,\n             onBreak: true,\n             url: \"https://webgradients.com/public/webgradients_png/054%20Grown%20Early.png\"\n        })          \n\n        this.timer = setInterval(() => { \n            \n            this.setState({\n                time: this.state.defaultTime - Date.now() + this.state.start\n            })  \n\n            if (this.state.time <500 && this.state.time > -500) {\n                this.handle2()\n             }\n\n        }\n        , 1);  \n    }\n\n    startTimer = () => {\n        this.setState({\n            time: this.state.defaultTime,\n            start: Date.now(),\n             isOn: true,\n             onBreak: false,\n             url: \"https://webgradients.com/public/webgradients_png/022%20Morpheus%20Den.png\",\n        })          \n        \n        this.timer = setInterval(() => { \n            \n            this.setState({\n                time: this.state.defaultTime - Date.now() + this.state.start\n            })  \n\n            if (this.state.time <500 && this.state.time > -500) {\n                this.handle()\n             }\n\n        }\n        , 1);  \n    }\n\n    stopTimer = () => {\n        this.setState({isOn: false, defaultTime: this.state.time})\n        clearInterval(this.timer);\n       \n    }\n    \n    restartTimer = () => {\n        this.setState({time: 1*60*1000, defaultTime: 1*60*1000});\n        \n    }\n    \n    \n    render() {\n        return(     \n\n                <div className=\"App-div\">\n                    <Helmet>\n                        <style>{`body {background-image: url(${this.state.url});}`}</style>\n                    </Helmet>\n                    <p style = {{fontSize: \"3vh\", color: \"#075a81\" }}> <b>  {this.state.onBreak ? \"Time to Relax!\" : \"Productive Time!\" } </b> </p>\n                    <h3 className= \"Headerr\">{this.msToTime(this.state.time)}</h3>    \n\n                <div className = \"App-div3\"> \n                \n                    <button className = \"idk\" onClick={this.startTimer} style={{ display: (!this.state.isOn && this.state.time == 1*60*1000) ? \"block\" : \"none\" }}> start </button> \n                    <button className = \"idk\" onClick={this.stopTimer} style={{ display: this.state.isOn ? \"block\" : \"none\" }}>stop</button> \n                    <button className = \"idk\"  onClick={this.restartTimer} style={{ display: (!this.state.isOn && this.state.time != 1*60*1000 && !this.state.onBreak) ? \"block\" : \"none\" }}>reset</button>\n                    <button className = \"idk\" onClick={this.state.onBreak ? this.afterBreak : this.startTimer} style={{ display: (!this.state.isOn && this.state.time != 1*60*1000  && this.state.time > 500) ? \"block\" : \"none\" }} >resume</button>\n                </div>\n            \n                </div>\n             \n\n                )\n    }\n}\n\n\n","import React, { Component } from 'react';\nimport './tasks.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash, faTrashAlt } from '@fortawesome/free-solid-svg-icons'\nimport { faSquare } from '@fortawesome/free-solid-svg-icons'\n\nexport default class Tasks extends Component {\n\n\n    constructor(){\n        super()\n        this.state = {\n            tasks: [],\n            textField: \"\"\n        }    \n    }\n\n    changeHandler = (event) => {\n        this.setState ({textField: event.target.value})\n    }\n\n\n\n    deleteTask = (event) => {\n        event.preventDefault();\n        console.log(\"hi\");\n        console.log(document.getElementById(event.target.getAttribute(\"id\")));\n      \n    }\n\n    addTask = (event) => {\n        event.preventDefault();\n        var joined = this.state.tasks.concat(\n\n    <div style={{width: \"70%\", margin: \"0 auto\", paddingTop: \"3vh\"}}> \n     {/* <button className = \"check\" style={{display: 'inline-block', marginRight:\"3vh\", marginTop:\"-2vh\", textAlign: \"center\", height:\"3vh\", width:\"3vh\"}}>  </button>   */}\n\n      <div className = \"card\" style={{display: 'inline-block', textAlign: \"center\"}}> \n      {this.state.textField}  \n      <div style={{marginLeft:\"65vh\", marginTop:\"-2vh\"}}> <a onClick={this.deleteTask}> <FontAwesomeIcon icon={faTrashAlt}/> </a> </div> \n      </div> \n    </div>\n\n        ) \n        this.setState ({tasks: joined, textField: \"\"});\n      }\n   \n    render() {\n        return(     \n            <div> \n                <form>\n                    \n                    <input \n                        type='text'\n                        onChange={this.changeHandler}\n                        style={{ width:\"80vh\" }} value= {this.state.textField}/>\n                        \n                        <button className = \"button\" onClick={this.addTask} style={{marginLeft: \"2vh\"}}> Add Task </button>\n\n                </form > \n\n                <div>\n                   {this.state.tasks}\n                </div>\n\n            </div>\n    \n        )\n    }\n} \n\n","import './App.css';\nimport Timer from './Timer';\nimport Tasks from './Tasks';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1> POMOTIVITY </h1>\n      </header>\n      <div style = {{height: \"10vh\"}}> \n      <p> Boost your <b> Productivity </b> with <b>Positivity</b> and the <b> Pomodoro </b> technique!</p>\n      </div> \n      {/* <p> Work Time!</p> */}\n      <Timer/> \n\n<div className=\"App-div4\"> \n  <u> <b> Add Tasks: </b></u>\n</div>\n    <br></br>\n    <br></br>\n    <Tasks/>\n    </div>\n  );\n}\n\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}